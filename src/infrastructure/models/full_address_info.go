// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FullAddressInfo FullAddressInfo
//
// Encapsulate all address data information
//
// swagger:model FullAddressInfo
type FullAddressInfo struct {

	// In KLS system: LANDKREIS_NAME, Name of the administrative districts
	AdministrativeDistrict string `json:"administrativeDistrict,omitempty"`

	// In KLS system: LANDKREIS_ZUSATZ, Additional Name of the administrative district
	AdministrativeDistrictSupplement string `json:"administrativeDistrictSupplement,omitempty"`

	// In KLS system: ASB, Connection area number
	Asb string `json:"asb,omitempty"`

	// In KLS system: BEZIRK, Governmental district
	CityDistrict string `json:"cityDistrict,omitempty"`

	// In KLS system: ID_WOHNORT
	DistributionAreaID int64 `json:"distributionAreaId,omitempty"`

	// In KLS system: WOHNORT_GDGTNR, LOCAL-KEY (1-8)
	DistributionAreaKey string `json:"distributionAreaKey,omitempty"`

	// In KLS system: WOHNORT_NAME, Name of the place of residence
	DistributionAreaName string `json:"distributionAreaName,omitempty"`

	// In KLS system: WOHNORT_ZUSATZ, Additional Name of the place of residence
	DistributionAreaNameSupplement string `json:"distributionAreaNameSupplement,omitempty"`

	// In KLS system: WOHNORT_GDGTNR,  MUNICIPALITY-PART VALUE (9-11)
	DistributionAreaPartValue string `json:"distributionAreaPartValue,omitempty"`

	// In KLS system: BUNDESLAND, Federal state
	FederalState string `json:"federalState,omitempty"`

	// In KLS system: GEO_LAENGE, Latitude as a decimal value, аormat (999,99999) = max. 9 figures
	GeoLatitude float64 `json:"geoLatitude,omitempty"`

	// In KLS system: GEO_BREITE, Longitude as a decimal value, аormat (999,99999) = max. 9 figures
	GeoLongitude float64 `json:"geoLongitude,omitempty"`

	// In KLS system: HAUSNUMMER, The house number of an address
	HouseNumber int32 `json:"houseNumber,omitempty"`

	// In KLS system: HSNR_ZUSATZ, The house number supplement of an address
	HouseNumberSupplement string `json:"houseNumberSupplement,omitempty"`

	// In KLS system: -, The full house number of an address
	HouseQualifier string `json:"houseQualifier,omitempty"`

	// In KLS system: ID, The numeric klsId of this address
	KlsID int64 `json:"klsId,omitempty"`

	// In KLS system: ID_GEMEINDE
	MunicipalityID int64 `json:"municipalityId,omitempty"`

	// In KLS system: GEMEINDE_GDGTNR, LOCAL-KEY (1-8)
	MunicipalityKey string `json:"municipalityKey,omitempty"`

	// In KLS system: GEMEINDE_NAME, The municipality of an address
	MunicipalityName string `json:"municipalityName,omitempty"`

	// In KLS system: GEMEINDE_ZUSATZ, Additional Name of the municipality
	MunicipalityNameSupplement string `json:"municipalityNameSupplement,omitempty"`

	// In KLS system: GEMEINDE_GDGTNR, MUNICIPALITY-PART VALUE (9-11)
	MunicipalityPartValue string `json:"municipalityPartValue,omitempty"`

	// In KLS system: ONKZ, Local net area identification number
	Onkz string `json:"onkz,omitempty"`

	// DEPRECTED, see field propertyIdLong
	PropertyID int32 `json:"propertyId,omitempty"`

	// In KLS system: OBJEKT_ID
	PropertyIDLong int64 `json:"propertyIdLong,omitempty"`

	// In KLS system: ID_STRASSE
	StreetID int64 `json:"streetId,omitempty"`

	// In KLS system: STRASSE_NAME, The street of an address
	StreetName string `json:"streetName,omitempty"`

	// In KLS system: STRASSE_KURZ, The short street of an address
	StreetNameShort string `json:"streetNameShort,omitempty"`

	// In KLS system: POSTLEITZAHL, the zipcode of an address
	ZipCode string `json:"zipCode,omitempty"`
}

// Validate validates this full address info
func (m *FullAddressInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FullAddressInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FullAddressInfo) UnmarshalBinary(b []byte) error {
	var res FullAddressInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
