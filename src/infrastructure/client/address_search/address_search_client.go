// Code generated by go-swagger; DO NOT EDIT.

package address_search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new address search API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for address search API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	ExtendedGetKlsIDUsingGET(params *ExtendedGetKlsIDUsingGETParams) (*ExtendedGetKlsIDUsingGETOK, error)

	ExtendedResolveAddressInfoUsingGET(params *ExtendedResolveAddressInfoUsingGETParams) (*ExtendedResolveAddressInfoUsingGETOK, error)

	ExtendedResolveFullAddressInfoUsingGET(params *ExtendedResolveFullAddressInfoUsingGETParams) (*ExtendedResolveFullAddressInfoUsingGETOK, error)

	GetAddressInfoByKlsIDUsingGET(params *GetAddressInfoByKlsIDUsingGETParams) (*GetAddressInfoByKlsIDUsingGETOK, error)

	GetFullAddressInfoByKlsIDUsingGET(params *GetFullAddressInfoByKlsIDUsingGETParams) (*GetFullAddressInfoByKlsIDUsingGETOK, error)

	GetKlsIDUsingGET(params *GetKlsIDUsingGETParams) (*GetKlsIDUsingGETOK, error)

	ResolveAddressInfoUsingGET(params *ResolveAddressInfoUsingGETParams) (*ResolveAddressInfoUsingGETOK, error)

	ResolveFullAddressInfoUsingGET(params *ResolveFullAddressInfoUsingGETParams) (*ResolveFullAddressInfoUsingGETOK, error)

	SearchAddressInfoUsingPOST(params *SearchAddressInfoUsingPOSTParams) (*SearchAddressInfoUsingPOSTOK, *SearchAddressInfoUsingPOSTCreated, error)

	SearchFullAddressInfoUsingPOST(params *SearchFullAddressInfoUsingPOSTParams) (*SearchFullAddressInfoUsingPOSTOK, *SearchFullAddressInfoUsingPOSTCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  ExtendedGetKlsIDUsingGET finds kls Id by address information uses extended number of fields house number and house number supplement
*/
func (a *Client) ExtendedGetKlsIDUsingGET(params *ExtendedGetKlsIDUsingGETParams) (*ExtendedGetKlsIDUsingGETOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtendedGetKlsIDUsingGETParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extendedGetKlsIdUsingGET",
		Method:             "GET",
		PathPattern:        "/api/addressLookup/v1/addressSearch/extended/getKlsId",
		ProducesMediaTypes: []string{"*/*"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtendedGetKlsIDUsingGETReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ExtendedGetKlsIDUsingGETOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for extendedGetKlsIdUsingGET: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ExtendedResolveAddressInfoUsingGET resolves address by address data uses extended number of fields house number and house number supplement
*/
func (a *Client) ExtendedResolveAddressInfoUsingGET(params *ExtendedResolveAddressInfoUsingGETParams) (*ExtendedResolveAddressInfoUsingGETOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtendedResolveAddressInfoUsingGETParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extendedResolveAddressInfoUsingGET",
		Method:             "GET",
		PathPattern:        "/api/addressLookup/v1/addressSearch/extended/resolveAddressInfo",
		ProducesMediaTypes: []string{"*/*"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtendedResolveAddressInfoUsingGETReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ExtendedResolveAddressInfoUsingGETOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for extendedResolveAddressInfoUsingGET: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ExtendedResolveFullAddressInfoUsingGET resolves address by address data uses extended number of fields house number and house number supplement
*/
func (a *Client) ExtendedResolveFullAddressInfoUsingGET(params *ExtendedResolveFullAddressInfoUsingGETParams) (*ExtendedResolveFullAddressInfoUsingGETOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtendedResolveFullAddressInfoUsingGETParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extendedResolveFullAddressInfoUsingGET",
		Method:             "GET",
		PathPattern:        "/giga-areas-location/v1/lookup/addressSearch/extended/resolveFullAddressInfo",
		ProducesMediaTypes: []string{"*/*"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtendedResolveFullAddressInfoUsingGETReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ExtendedResolveFullAddressInfoUsingGETOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for extendedResolveFullAddressInfoUsingGET: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAddressInfoByKlsIDUsingGET finds address by kls Id
*/
func (a *Client) GetAddressInfoByKlsIDUsingGET(params *GetAddressInfoByKlsIDUsingGETParams) (*GetAddressInfoByKlsIDUsingGETOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAddressInfoByKlsIDUsingGETParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getAddressInfoByKlsIdUsingGET",
		Method:             "GET",
		PathPattern:        "/api/addressLookup/v1/addressSearch/getAddressInfo/{klsId}",
		ProducesMediaTypes: []string{"*/*"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAddressInfoByKlsIDUsingGETReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAddressInfoByKlsIDUsingGETOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAddressInfoByKlsIdUsingGET: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetFullAddressInfoByKlsIDUsingGET finds full address information by kls Id
*/
func (a *Client) GetFullAddressInfoByKlsIDUsingGET(params *GetFullAddressInfoByKlsIDUsingGETParams) (*GetFullAddressInfoByKlsIDUsingGETOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetFullAddressInfoByKlsIDUsingGETParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getFullAddressInfoByKlsIdUsingGET",
		Method:             "GET",
		PathPattern:        "/api/addressLookup/v1/addressSearch/getFullAddressInfo/{klsId}",
		ProducesMediaTypes: []string{"*/*"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetFullAddressInfoByKlsIDUsingGETReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetFullAddressInfoByKlsIDUsingGETOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getFullAddressInfoByKlsIdUsingGET: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetKlsIDUsingGET finds kls Id by address information
*/
func (a *Client) GetKlsIDUsingGET(params *GetKlsIDUsingGETParams) (*GetKlsIDUsingGETOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetKlsIDUsingGETParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getKlsIdUsingGET",
		Method:             "GET",
		PathPattern:        "/api/addressLookup/v1/addressSearch/getKlsId",
		ProducesMediaTypes: []string{"*/*"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetKlsIDUsingGETReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetKlsIDUsingGETOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getKlsIdUsingGET: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ResolveAddressInfoUsingGET resolves address by address data
*/
func (a *Client) ResolveAddressInfoUsingGET(params *ResolveAddressInfoUsingGETParams) (*ResolveAddressInfoUsingGETOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewResolveAddressInfoUsingGETParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "resolveAddressInfoUsingGET",
		Method:             "GET",
		PathPattern:        "/api/addressLookup/v1/addressSearch/resolveAddressInfo",
		ProducesMediaTypes: []string{"*/*"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ResolveAddressInfoUsingGETReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ResolveAddressInfoUsingGETOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for resolveAddressInfoUsingGET: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ResolveFullAddressInfoUsingGET resolves address by address data
*/
func (a *Client) ResolveFullAddressInfoUsingGET(params *ResolveFullAddressInfoUsingGETParams) (*ResolveFullAddressInfoUsingGETOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewResolveFullAddressInfoUsingGETParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "resolveFullAddressInfoUsingGET",
		Method:             "GET",
		PathPattern:        "/giga-areas-location/v1/lookup/addressSearch/resolveFullAddressInfo",
		ProducesMediaTypes: []string{"*/*"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ResolveFullAddressInfoUsingGETReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ResolveFullAddressInfoUsingGETOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for resolveFullAddressInfoUsingGET: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SearchAddressInfoUsingPOST finds address by search criteria
*/
func (a *Client) SearchAddressInfoUsingPOST(params *SearchAddressInfoUsingPOSTParams) (*SearchAddressInfoUsingPOSTOK, *SearchAddressInfoUsingPOSTCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSearchAddressInfoUsingPOSTParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "searchAddressInfoUsingPOST",
		Method:             "POST",
		PathPattern:        "/api/addressLookup/v1/addressSearch/getAddressInfo/search",
		ProducesMediaTypes: []string{"*/*"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SearchAddressInfoUsingPOSTReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *SearchAddressInfoUsingPOSTOK:
		return value, nil, nil
	case *SearchAddressInfoUsingPOSTCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for address_search: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SearchFullAddressInfoUsingPOST finds full address by search criteria
*/
func (a *Client) SearchFullAddressInfoUsingPOST(params *SearchFullAddressInfoUsingPOSTParams) (*SearchFullAddressInfoUsingPOSTOK, *SearchFullAddressInfoUsingPOSTCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSearchFullAddressInfoUsingPOSTParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "searchFullAddressInfoUsingPOST",
		Method:             "POST",
		PathPattern:        "/api/addressLookup/v1/addressSearch/getFullAddressInfo/search",
		ProducesMediaTypes: []string{"*/*"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SearchFullAddressInfoUsingPOSTReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *SearchFullAddressInfoUsingPOSTOK:
		return value, nil, nil
	case *SearchFullAddressInfoUsingPOSTCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for address_search: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
