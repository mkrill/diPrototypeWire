// Code generated by go-swagger; DO NOT EDIT.

package address_search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mkrill/diPrototypeWire/src/infrastructure/models"
)

// ResolveFullAddressInfoUsingGETReader is a Reader for the ResolveFullAddressInfoUsingGET structure.
type ResolveFullAddressInfoUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResolveFullAddressInfoUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewResolveFullAddressInfoUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewResolveFullAddressInfoUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewResolveFullAddressInfoUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewResolveFullAddressInfoUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewResolveFullAddressInfoUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewResolveFullAddressInfoUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewResolveFullAddressInfoUsingGETOK creates a ResolveFullAddressInfoUsingGETOK with default headers values
func NewResolveFullAddressInfoUsingGETOK() *ResolveFullAddressInfoUsingGETOK {
	return &ResolveFullAddressInfoUsingGETOK{}
}

/*ResolveFullAddressInfoUsingGETOK handles this case with default header values.

Information was found.
*/
type ResolveFullAddressInfoUsingGETOK struct {
	Payload *models.FullAddressInfo
}

func (o *ResolveFullAddressInfoUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /giga-areas-location/v1/lookup/addressSearch/resolveFullAddressInfo][%d] resolveFullAddressInfoUsingGETOK  %+v", 200, o.Payload)
}

func (o *ResolveFullAddressInfoUsingGETOK) GetPayload() *models.FullAddressInfo {
	return o.Payload
}

func (o *ResolveFullAddressInfoUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FullAddressInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResolveFullAddressInfoUsingGETBadRequest creates a ResolveFullAddressInfoUsingGETBadRequest with default headers values
func NewResolveFullAddressInfoUsingGETBadRequest() *ResolveFullAddressInfoUsingGETBadRequest {
	return &ResolveFullAddressInfoUsingGETBadRequest{}
}

/*ResolveFullAddressInfoUsingGETBadRequest handles this case with default header values.

Bad request.
*/
type ResolveFullAddressInfoUsingGETBadRequest struct {
	Payload *models.ProblemDetails
}

func (o *ResolveFullAddressInfoUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /giga-areas-location/v1/lookup/addressSearch/resolveFullAddressInfo][%d] resolveFullAddressInfoUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *ResolveFullAddressInfoUsingGETBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ResolveFullAddressInfoUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResolveFullAddressInfoUsingGETUnauthorized creates a ResolveFullAddressInfoUsingGETUnauthorized with default headers values
func NewResolveFullAddressInfoUsingGETUnauthorized() *ResolveFullAddressInfoUsingGETUnauthorized {
	return &ResolveFullAddressInfoUsingGETUnauthorized{}
}

/*ResolveFullAddressInfoUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type ResolveFullAddressInfoUsingGETUnauthorized struct {
}

func (o *ResolveFullAddressInfoUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /giga-areas-location/v1/lookup/addressSearch/resolveFullAddressInfo][%d] resolveFullAddressInfoUsingGETUnauthorized ", 401)
}

func (o *ResolveFullAddressInfoUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResolveFullAddressInfoUsingGETForbidden creates a ResolveFullAddressInfoUsingGETForbidden with default headers values
func NewResolveFullAddressInfoUsingGETForbidden() *ResolveFullAddressInfoUsingGETForbidden {
	return &ResolveFullAddressInfoUsingGETForbidden{}
}

/*ResolveFullAddressInfoUsingGETForbidden handles this case with default header values.

Forbidden
*/
type ResolveFullAddressInfoUsingGETForbidden struct {
}

func (o *ResolveFullAddressInfoUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /giga-areas-location/v1/lookup/addressSearch/resolveFullAddressInfo][%d] resolveFullAddressInfoUsingGETForbidden ", 403)
}

func (o *ResolveFullAddressInfoUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResolveFullAddressInfoUsingGETNotFound creates a ResolveFullAddressInfoUsingGETNotFound with default headers values
func NewResolveFullAddressInfoUsingGETNotFound() *ResolveFullAddressInfoUsingGETNotFound {
	return &ResolveFullAddressInfoUsingGETNotFound{}
}

/*ResolveFullAddressInfoUsingGETNotFound handles this case with default header values.

KlsId was not found for specified address.
*/
type ResolveFullAddressInfoUsingGETNotFound struct {
	Payload *models.ProblemDetails
}

func (o *ResolveFullAddressInfoUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /giga-areas-location/v1/lookup/addressSearch/resolveFullAddressInfo][%d] resolveFullAddressInfoUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *ResolveFullAddressInfoUsingGETNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ResolveFullAddressInfoUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResolveFullAddressInfoUsingGETInternalServerError creates a ResolveFullAddressInfoUsingGETInternalServerError with default headers values
func NewResolveFullAddressInfoUsingGETInternalServerError() *ResolveFullAddressInfoUsingGETInternalServerError {
	return &ResolveFullAddressInfoUsingGETInternalServerError{}
}

/*ResolveFullAddressInfoUsingGETInternalServerError handles this case with default header values.

Internal Server Error.
*/
type ResolveFullAddressInfoUsingGETInternalServerError struct {
	Payload *models.ProblemDetails
}

func (o *ResolveFullAddressInfoUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /giga-areas-location/v1/lookup/addressSearch/resolveFullAddressInfo][%d] resolveFullAddressInfoUsingGETInternalServerError  %+v", 500, o.Payload)
}

func (o *ResolveFullAddressInfoUsingGETInternalServerError) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ResolveFullAddressInfoUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
