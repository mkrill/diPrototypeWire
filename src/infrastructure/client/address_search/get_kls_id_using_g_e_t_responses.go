// Code generated by go-swagger; DO NOT EDIT.

package address_search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mkrill/diPrototypeWire/src/infrastructure/models"
)

// GetKlsIDUsingGETReader is a Reader for the GetKlsIDUsingGET structure.
type GetKlsIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKlsIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKlsIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKlsIDUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKlsIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKlsIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKlsIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKlsIDUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKlsIDUsingGETOK creates a GetKlsIDUsingGETOK with default headers values
func NewGetKlsIDUsingGETOK() *GetKlsIDUsingGETOK {
	return &GetKlsIDUsingGETOK{}
}

/*GetKlsIDUsingGETOK handles this case with default header values.

Information was found.
*/
type GetKlsIDUsingGETOK struct {
	Payload int64
}

func (o *GetKlsIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /api/addressLookup/v1/addressSearch/getKlsId][%d] getKlsIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetKlsIDUsingGETOK) GetPayload() int64 {
	return o.Payload
}

func (o *GetKlsIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKlsIDUsingGETBadRequest creates a GetKlsIDUsingGETBadRequest with default headers values
func NewGetKlsIDUsingGETBadRequest() *GetKlsIDUsingGETBadRequest {
	return &GetKlsIDUsingGETBadRequest{}
}

/*GetKlsIDUsingGETBadRequest handles this case with default header values.

Bad request.
*/
type GetKlsIDUsingGETBadRequest struct {
	Payload *models.ProblemDetails
}

func (o *GetKlsIDUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/addressLookup/v1/addressSearch/getKlsId][%d] getKlsIdUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetKlsIDUsingGETBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetKlsIDUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKlsIDUsingGETUnauthorized creates a GetKlsIDUsingGETUnauthorized with default headers values
func NewGetKlsIDUsingGETUnauthorized() *GetKlsIDUsingGETUnauthorized {
	return &GetKlsIDUsingGETUnauthorized{}
}

/*GetKlsIDUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetKlsIDUsingGETUnauthorized struct {
}

func (o *GetKlsIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/addressLookup/v1/addressSearch/getKlsId][%d] getKlsIdUsingGETUnauthorized ", 401)
}

func (o *GetKlsIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKlsIDUsingGETForbidden creates a GetKlsIDUsingGETForbidden with default headers values
func NewGetKlsIDUsingGETForbidden() *GetKlsIDUsingGETForbidden {
	return &GetKlsIDUsingGETForbidden{}
}

/*GetKlsIDUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetKlsIDUsingGETForbidden struct {
}

func (o *GetKlsIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/addressLookup/v1/addressSearch/getKlsId][%d] getKlsIdUsingGETForbidden ", 403)
}

func (o *GetKlsIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKlsIDUsingGETNotFound creates a GetKlsIDUsingGETNotFound with default headers values
func NewGetKlsIDUsingGETNotFound() *GetKlsIDUsingGETNotFound {
	return &GetKlsIDUsingGETNotFound{}
}

/*GetKlsIDUsingGETNotFound handles this case with default header values.

KlsId was not found for specified address.
*/
type GetKlsIDUsingGETNotFound struct {
	Payload *models.ProblemDetails
}

func (o *GetKlsIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/addressLookup/v1/addressSearch/getKlsId][%d] getKlsIdUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetKlsIDUsingGETNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetKlsIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKlsIDUsingGETInternalServerError creates a GetKlsIDUsingGETInternalServerError with default headers values
func NewGetKlsIDUsingGETInternalServerError() *GetKlsIDUsingGETInternalServerError {
	return &GetKlsIDUsingGETInternalServerError{}
}

/*GetKlsIDUsingGETInternalServerError handles this case with default header values.

Internal Server Error.
*/
type GetKlsIDUsingGETInternalServerError struct {
	Payload *models.ProblemDetails
}

func (o *GetKlsIDUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/addressLookup/v1/addressSearch/getKlsId][%d] getKlsIdUsingGETInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKlsIDUsingGETInternalServerError) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GetKlsIDUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
