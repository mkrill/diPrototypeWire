// Code generated by go-swagger; DO NOT EDIT.

package address_deprecated_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mkrill/diPrototypeWire/src/infrastructure/models"
)

// ResolveDeprecatedAddressUsingGETReader is a Reader for the ResolveDeprecatedAddressUsingGET structure.
type ResolveDeprecatedAddressUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResolveDeprecatedAddressUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewResolveDeprecatedAddressUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewResolveDeprecatedAddressUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewResolveDeprecatedAddressUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewResolveDeprecatedAddressUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewResolveDeprecatedAddressUsingGETOK creates a ResolveDeprecatedAddressUsingGETOK with default headers values
func NewResolveDeprecatedAddressUsingGETOK() *ResolveDeprecatedAddressUsingGETOK {
	return &ResolveDeprecatedAddressUsingGETOK{}
}

/*ResolveDeprecatedAddressUsingGETOK handles this case with default header values.

OK
*/
type ResolveDeprecatedAddressUsingGETOK struct {
	Payload *models.Address
}

func (o *ResolveDeprecatedAddressUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/address-lookup/resolve][%d] resolveDeprecatedAddressUsingGETOK  %+v", 200, o.Payload)
}

func (o *ResolveDeprecatedAddressUsingGETOK) GetPayload() *models.Address {
	return o.Payload
}

func (o *ResolveDeprecatedAddressUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Address)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResolveDeprecatedAddressUsingGETUnauthorized creates a ResolveDeprecatedAddressUsingGETUnauthorized with default headers values
func NewResolveDeprecatedAddressUsingGETUnauthorized() *ResolveDeprecatedAddressUsingGETUnauthorized {
	return &ResolveDeprecatedAddressUsingGETUnauthorized{}
}

/*ResolveDeprecatedAddressUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type ResolveDeprecatedAddressUsingGETUnauthorized struct {
}

func (o *ResolveDeprecatedAddressUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/address-lookup/resolve][%d] resolveDeprecatedAddressUsingGETUnauthorized ", 401)
}

func (o *ResolveDeprecatedAddressUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResolveDeprecatedAddressUsingGETForbidden creates a ResolveDeprecatedAddressUsingGETForbidden with default headers values
func NewResolveDeprecatedAddressUsingGETForbidden() *ResolveDeprecatedAddressUsingGETForbidden {
	return &ResolveDeprecatedAddressUsingGETForbidden{}
}

/*ResolveDeprecatedAddressUsingGETForbidden handles this case with default header values.

Forbidden
*/
type ResolveDeprecatedAddressUsingGETForbidden struct {
}

func (o *ResolveDeprecatedAddressUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/address-lookup/resolve][%d] resolveDeprecatedAddressUsingGETForbidden ", 403)
}

func (o *ResolveDeprecatedAddressUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResolveDeprecatedAddressUsingGETNotFound creates a ResolveDeprecatedAddressUsingGETNotFound with default headers values
func NewResolveDeprecatedAddressUsingGETNotFound() *ResolveDeprecatedAddressUsingGETNotFound {
	return &ResolveDeprecatedAddressUsingGETNotFound{}
}

/*ResolveDeprecatedAddressUsingGETNotFound handles this case with default header values.

Not Found
*/
type ResolveDeprecatedAddressUsingGETNotFound struct {
}

func (o *ResolveDeprecatedAddressUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1.0/address-lookup/resolve][%d] resolveDeprecatedAddressUsingGETNotFound ", 404)
}

func (o *ResolveDeprecatedAddressUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
